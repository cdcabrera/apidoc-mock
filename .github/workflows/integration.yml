name: Build
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main, build, development ]
env:
  COV_NODE_VERSION: 14

jobs:
  Integration-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set Node.js packages yarn cache directory
        id: yarn-cache-dir
        run: echo ::set-output name=CACHE_DIR::$(yarn cache dir)
      - name: Node.js yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn
      - name: Node.js modules cache
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-modules
      - name: Install Node.js packages
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: yarn install
      - name: Lint and test
        uses: actions/github-script@v4.0.2
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              console.log(`${execSync('yarn test', { stdio: 'pipe' })}`);
            } catch ({ stdout, stderr }) {
              core.setFailed(`${stdout}\n${stderr}`);
            }
      - name: Code coverage
        if: ${{ success() && contains(matrix.node-version, env.COV_NODE_VERSION) }}
        uses: codecov/codecov-action@v2.0.2
      - name: Confirm integration
        if: ${{ success() }}
        uses: actions/github-script@v4.0.2
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              console.log(`${execSync('yarn test:integration', { stdio: 'pipe' })}`);
            } catch ({ stdout, stderr }) {
              core.setFailed(`${stdout}\n${stderr}`);
            }
